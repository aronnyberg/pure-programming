#New version of conways game of life, wanted to try yields

grid = [tuple([a,b]) for a in range(10) for b in range(10)]

def neighbours(cell):
    x,y = cell #does cell = x,y work?
    yield x+1, y
    yield x-1, y
    yield x, y+1
    yield x, y-1
    yield x+1, y+1
    yield x+1, y-1
    yield x-1, y-1
    yield x-1, y+1
    
    cell_history = {}
for each in grid:
    cell_history.update({each:[0]})

cell_history[(4,4)] =[1]
cell_history[(5,5)] =[1]
cell_history[(5,6)] =[1]
cell_history[(6,4)] =[1]
cell_history[(6,5)] =[1]

for time in range(100):
    for i in grid:
        n=0
        #count = sum(cell for cell in cell_history[neighbours(i)])
        for each in neighbours(i):
            if each in grid:
                n+=sum(cell_history[each])
            else:
                # negihbour not in grid
                pass
        if n in (2,3):
            cell_history[i].append(1)
        else:
            cell_history[i].append(0)
            
#run
#cell_history
